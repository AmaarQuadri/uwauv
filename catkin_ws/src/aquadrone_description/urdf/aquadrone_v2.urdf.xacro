<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro">
  <!-- https://github.com/uuvsimulator/uuv_simulator/wiki/Templates-to-create-a-new-thruster-actuated-vehicle-model -->

  <!--
    Vehicle's parameters
  -->

  <xacro:property name="mass" value="60"/>
  <xacro:property name="volume" value="0.1"/>
  <!-- Center of gravity -->
  <xacro:property name="cog" value="0 0 0"/>
  <!-- Center of buoyancy -->
  <xacro:property name="cob" value="0 0 0"/>
  <!-- Fluid density -->
  <xacro:property name="rho" value="1028"/>

  <!-- Describing the dimensions of the vehicle's bounding box -->
  <xacro:property name="length" value="0.9144"/>
  <xacro:property name="width"  value="0.3048"/>
  <xacro:property name="height" value="0.2"/>

  <!-- Vehicle macro -->
  <xacro:macro name="aquadrone_base" params="debug">

    <!-- Rigid body description of the base link -->
    <link name="base_link">
      <inertial>
        <mass value="${mass}" />
        <origin xyz="${cog}" rpy="0 0 0"/>
        <inertia ixx="1" ixy="0" ixz="0"
                 iyy="1" iyz="0"
                 izz="1" />
      </inertial>

      <visual>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
          <box size="${length} ${width} ${height}"/>
        </geometry>
      </visual>

      <collision>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
          <box size="${length} ${width} ${height}"/>
        </geometry>
      </collision>



    </link>

  <gazebo reference="base_link">
    <selfCollide>false</selfCollide>
  </gazebo>



    <!-- Set up hydrodynamic plugin -->
    <gazebo>
      <plugin name="uuv_plugin" filename="libuuv_underwater_object_plugin.so">
        <!-- Fluid density to be used in the computation of buoyancy forces
        for all links specified below -->
        <fluid_density>${rho}</fluid_density>

        <!-- Name of the current velocity topic -->
        <flow_velocity_topic>hydrodynamics/current_velocity</flow_velocity_topic>

        <!-- Debug flag, if set to true, added-mass, damping and restoring
        forces and moments will be published in separate topics -->
        <debug>${debug}</debug>

        <!-- List of hydrodynamic models this robot's links -->
        <link name="base_link">
          <!-- This flag will make the link neutrally buoyant -->
          <neutrally_buoyant>1</neutrally_buoyant>


          <!-- Center of buoyancy -->
          <center_of_buoyancy>${cob}</center_of_buoyancy>

          <!--
          Reference:
          Fossen, Thor I. Handbook of marine craft hydrodynamics and motion
          control. John Wiley & Sons, 2011.
          -->

          <!-- Fossen's equation of motion -->
          <hydrodynamic_model>
            <type>fossen</type>
            <added_mass>
              0 0 0 0 0 0
              0 0 0 0 0 0
              0 0 0 0 0 0
              0 0 0 0 0 0
              0 0 0 0 0 0
              0 0 0 0 0 0
            </added_mass>
            <!--
            The linear damping coefficients can be provided as a diagonal (6 elements)
            or a full matrix (36 coefficients), like the added-mass coefficients above
            -->
            <linear_damping>
              -1 -1 -1 0 0 0
            </linear_damping>
            <!--
            The linear damping coefficients proportional to the forward speed
            can be provided as a diagonal (6 elements) or a full matrix (36 coefficients),
            like the added-mass coefficients above.
            This matrix is mostly useful for slender bodies (e.g. AUVs with torpedo shape)
            -->
            <linear_damping_forward_speed>
              0 0 0 0 0 0
            </linear_damping_forward_speed>
            <!--
            The quadratic damping coefficients can be provided as a diagonal (6 elements)
            or a full matrix (36 coefficients), like the added-mass coefficients above
            -->
            <quadratic_damping>
              0 0 0 0 0 0
            </quadratic_damping>

                      <!-- Link's bounding box, it is used to recalculate the immersed
          volume when close to the surface.
          This is a workaround the invalid bounding box given by Gazebo-->
          <volume>${width * length * height}</volume>
          <box>
            <width>${width}</width>
            <length>${length}</length>
            <height>${height}</height>
          </box>
          </hydrodynamic_model>


        </link>
      </plugin>
    </gazebo>


  </xacro:macro>

</robot>